rule "LED Stripes - Sunrise"
when 
	Item sunriseSwitch changed to ON
then
	var Integer Dimmer
	var Integer DimmerCheck
	var Integer HueVal
	var Integer SatVal
	var DecimalType hue = new DecimalType(0) // 0-360; 0=red, 120=green, 240=blue, 360=red(again)
	var PercentType sat = new PercentType(100) // 0-100
	var PercentType bright = new PercentType(0)
	var HSBType light

	var Integer sunriseBrightness = (sunriseBrightness.state as DecimalType).intValue   // Maximum % of Light
	var Integer sunrisePhase1Brightness = (sunrisePhase1Brightness.state as DecimalType).intValue   // Maximum % of Light

	var Integer sunrisePhase1Duration = (sunrisePhase1Duration.state as DecimalType).intValue * 60 * 1000   // * seconds * milliseconds
	var Integer sunrisePhase2Duration = (sunrisePhase2Duration.state as DecimalType).intValue * 60 * 1000 / sunriseBrightness
	var Integer sunrisePhase3Duration = (sunrisePhase3Duration.state as DecimalType).intValue * 60 * 1000 / sunriseBrightness
	var Integer sunrisePhase4Duration = (sunrisePhase4Duration.state as DecimalType).intValue * 1000

	Dimmer = 0
	HueVal = 0
	SatVal = 100
	DimmerCheck=Dimmer

	light = new HSBType(hue,sat,bright)
	gLedStripesSunriseColor.members.forEach[s | s.sendCommand(light)]  // reset the stripe values
	gLedStripesSunriseWhite.members.forEach[s | s.sendCommand(Dimmer)] // reset the stripe values for white

	postUpdate(sunriseSwitch, ON)  
	gLedStripesSunrisePower.members.forEach[s | s.sendCommand(ON)] // switch the stripes on

	logInfo("rules","Sunrise started.")
	while(sunriseSwitch.state == ON && Dimmer<=sunriseBrightness && Dimmer<100 && (sunrisePhase1Switch.state == ON || sunrisePhase2Switch.state == ON)) // End up at x% brightness
	{
		if (Dimmer==DimmerCheck)
		{
			Dimmer = Dimmer + 1
			bright = new PercentType(Dimmer)
			hue = new DecimalType(HueVal)
			sat = new PercentType(SatVal)
			light = new HSBType(hue,sat,bright)
			if ((Dimmer==1) && (sunrisePhase1Switch.state == ON))
			{
				logInfo("rules","Sunrise: 1st phase started. ")
				gLedStripesSunriseColor.members.forEach[s | s.sendCommand(light)]
				Thread::sleep(sunrisePhase1Duration) // if sun arise wait with the light beams
			} 
			if (sunrisePhase2Switch.state == ON)
			{                     
				gLedStripesSunriseColor.members.forEach[s | s.sendCommand(light)]
				if (HueVal<10) {
					logInfo("rules","Sunrise: 2nd phase started - Color " + HueVal)
					HueVal = HueVal + 1 // Increment from 0 to 10
				} 
				Thread::sleep(sunrisePhase2Duration)
			}
			DimmerCheck = Dimmer
		}
	}
	Dimmer = 0
	DimmerCheck = Dimmer
	logInfo("rules","Sunrise: 3rd phase started.")
	while(sunriseSwitch.state == ON && Dimmer<=sunriseBrightness && Dimmer<100 && sunrisePhase3Switch.state == ON) // End up at x% brightness
	{
		if ((sunrisePhase3Switch.state == ON) && (Dimmer==DimmerCheck))
		{
			gLedStripesSunriseWhite.members.forEach[s | s.sendCommand(Dimmer)]
			
			Dimmer = Dimmer + 1
			Thread::sleep(sunrisePhase3Duration)
			DimmerCheck = Dimmer 
		}
	}
	postUpdate(sunriseSwitch, OFF)  
	logInfo("rules","Sunrise: Finished.")

end


rule "LED Stripes - Blinking Brightness"
when 
    Item LEDStripesBlinkingBrightness changed to ON
then

    var Boolean blinkingBrightnessLoop = true
    var Timer blinkingBrightnessLoopTimer = null
    var Integer blinkingBrightnessLoopTimerDuration = 10
    var Timer blinkingBrightnessLoopLooper = null
    var Integer switchColor = 1

    // setting the loop to a specific duration
    blinkingBrightnessLoopTimer = createTimer(now.plusSeconds(blinkingBrightnessLoopTimerDuration), [ |
        blinkingBrightnessLoop = false
    ])

    logInfo("rules","Starting LEDStripes Blinking for "+blinkingBrightnessLoopTimerDuration+" seconds")

    // setting initial light before looping
    gLedStripesColor.members.forEach[s | s.sendCommand(100)]
    gLedStripesWhite.members.forEach[s | s.sendCommand(100)]

    // switching the light in a loop
    blinkingBrightnessLoopLooper = createTimer(now.plusSeconds(1), [ |
        if(blinkingBrightnessLoop === true) { 

            if(switchColor == 0) {
                // setting brightness to 50%
                gLedStripesColor.members.forEach[s | s.sendCommand(50)]
                gLedStripesWhite.members.forEach[s | s.sendCommand(50)]
                switchColor = 1
            }
            else {
                // setting brightness to 100%
                gLedStripesColor.members.forEach[s | s.sendCommand(100)]
                gLedStripesWhite.members.forEach[s | s.sendCommand(100)]
                switchColor = 0
            }

            // Reschedule the timer blinkingBrightnessLoopLooper
            blinkingBrightnessLoopLooper.reschedule(now.plusSeconds(1))
        } else {
            blinkingBrightnessLoopLooper.cancel
        }
    ])

    postUpdate(LEDStripesBlinkingBrightness, OFF)	// resetting switch item

end